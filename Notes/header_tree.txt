src->main
     main->[iostream]
         ->util/terminal
                        ->util/string
		                     ->[string] 
         ->sources_pos
                      ->util/string
                                   ->[string]
                      ->util/misc
                                 ->[memory]
                      ->[stdexcept]

         ->options
                  ->util/string
 	                       ->[string]
                  ->util/result
	                       ->util/variant
	                                     ->[variant]   
	            util/result->[optional, memory, stdexcept]
                  ->[stdexcept]

         ->config
                 ->util/string
	                      ->[string]
                 ->output
	                 ->util/string
	                              ->[string]
                         ->util/result
	                              ->[optional, memory, stdexcept]
	                              ->util/variant
		                                    ->[variant]   
                         ->util/optional
	                                ->[optional]
                         ->[isofwd, stdexcept]
                 ->[stdexcept, iostream, fstream, sstream]

         ->output
                 ->util/string
	                      ->[string]
                 ->util/result
	                      ->util/variant
		                            ->[variant]   
	                      ->[optional, memory, stdexcept]
      	         ->util/optional
	      	                ->[optional]
                 ->[isofwd, stdexcept]

         ->input
      	        ->util/string
	                     ->[string]
                ->util/result
	                     ->util/variant
			                   ->[variant]  
	                     ->[optional, memory, stdexcept] 
                ->[iosfwd, filesystem, stdexcept]

         ->compiler
                   ->util/result
	 	                ->util/variant
			                      ->[variant]  
	 	   ->util/result->[optional, memory, stdexcept]
                   ->util/string
		                ->[string]
                   ->error
		          ->sources_pos
		                       ->util/string
				                    ->[string]
		                       ->util/misc
				                  ->[memory]
		                       ->[stdexcept]
		          ->util/result
	                               ->util/variant
		                                     ->[variant]   
	                               ->[optional, memory, stdexcept]
		          ->util/optional
		                         ->[optional]
		          ->util/string
		                       ->[string]
		          ->[stdexcept]
/*******************************************************************************************************/
src->ast
        ->[memory]
        ->util/variant
	              ->[variant]
        ->util/refs
                   ->[stdexcept, functional]
                   ->util/string
                                ->[string]
        ->util/vector
                     ->[vector, algorithm, type_traits]
        ->util/string
                     ->[string]
        ->type
              ->error
		     ->sources_pos
		                  ->util/string
				               ->[string]
		                  ->util/misc
				             ->[memory]
		                  ->[stdexcept]
		     ->util/result
	                          ->util/variant
		                  ->util/variant
                                                ->[variant]   
	                          ->[optional, memory, stdexcept]
		     ->util/optional
		                    ->[optional]
		     ->util/string
		                  ->[string]
		     ->[stdexcept]
	      ->util/string
                           ->[string]
	      ->util/result
	                   ->util/result->util/variant
	                                              ->[variant]   
	                   ->[optional, memory, stdexcept]
	      ->util/vector
	                   ->[vector, algorithm, type_traits]
	      ->util/optional
                             ->[optional]
	      ->util/names
	                  ->util/string
			               ->[string]
	      ->prim_type
                         ->[string]
                         ->util/names
		                     ->util/string
			                          ->[string]
                         ->util/hash
			            ->[functional]

	       ->util/optional
	      	              ->[optional
	       ->util/variant
		             ->[variant]
        ->ops
             ->[string]

        ->sources_pos
                     ->util/string
		                  ->[string]
	             ->util/misc
		                ->[memory]
	             ->[stdexcept]
/*******************************************************************************************************/
src->build_events
                 ->prim_type
		 ->util/string
			    ->util/string->[string]
                            ->util/names
		                        ->util/string
			                             ->[string]
                            ->util/hash
			               ->[functional]
/*******************************************************************************************************/
src->builtin_funcs
                  ->names
                  ->type
                  ->ast
                  ->util/map
                  ->[functional]
/*******************************************************************************************************/
src->codegen
            ->gen_env
/*******************************************************************************************************/
src->codegen_builtin_events
                           ->gen_env
                           ->codegen_dsl
                           ->builtin_events
/*******************************************************************************************************/
src->codegen_dsl
/*******************************************************************************************************/
src->codegen_trace
/*******************************************************************************************************/
src->errors
/*******************************************************************************************************/
src->gen_env
/*******************************************************************************************************/
{Seems like lexer_input, lexer, error, does not need to unclude util/string}
src->lexer->sources_pos
                       ->util/string
	                            ->[string]
	               ->util/misc
	                          ->[memory]
	               ->[stdexcept]
          ->lexer_input
	               ->util/string
				    ->[string]
		       ->sources_pos
                                    ->util/string
	                                         ->[string]
	                            ->util/misc
	                                       ->[memory]
	                            ->[stdexcept]

	  ->util/string
	               ->[string]  
          ->token
                 ->util/variant
                               ->[variant]
	         ->util/optional
                 ->util/type
                 ->prim_type
          ->util/result
                       ->util/variant
		                     ->[variant]   
          ->error
		 ->[stdexcept]
		 ->source_pos
			     ->util/string
                                          ->[string]
                             ->util/misc
                                        ->[memory]
                             ->[stdexcept]
		 ->util/result
	                      ->util/variant
		              ->util/variant
                                            ->[variant]   
	                      ->[optional, memory, stdexcept]
                 ->optional
			   ->[optional]
                 ->string
                         ->[string]
          ->util/vector
	               ->[vector]
/*******************************************************************************************************/
src->lexer_input
/*******************************************************************************************************/
src->names
/*******************************************************************************************************/
src->parse
/*******************************************************************************************************/
src->parse_input
/*******************************************************************************************************/
src->parse_result
/*******************************************************************************************************/
src->prim_type
/*******************************************************************************************************/
src->scope
/*******************************************************************************************************/
src->sources_pos_private
/*******************************************************************************************************/
src->token
/*******************************************************************************************************/
src->type_env
/*******************************************************************************************************/
src->typechecker
/*******************************************************************************************************/

---------------------------------------------------------------------------------------------------------
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
---------------------------------------------------------------------------------------------------------

util->
util->bimap
/*******************************************************************************************************/
util->hash
/*******************************************************************************************************/
util->list
/*******************************************************************************************************/
util->map
/*******************************************************************************************************/
util->mapkey
/*******************************************************************************************************/
util->name
/*******************************************************************************************************/
util->ref
/*******************************************************************************************************/

__main__ = {[iostream], compiler, input, output, config, options, source_pos}

binmap = {map}
hash = {[functional]}
list = {[list]}
map = {[unordered_map], [utility], result}
mapkey={[tuple], hash}
misc = {[memory]}
name = {string}
optional = {[optional]}
ref = {string, [stdexcept], [functional]}
result = {variant, [optional], [memory], [stdexcept]}
set = {[unordered_map], [utility]}
stack = {[stack]}
string = {[string]}
terminal = {string}
variant = {[variant]}
vector = {[vector], [algorithm], [type_traits]}


ast = {[memory], variant, refs, vector, string, type, ops, source_pos}
builtin_events = {prim_type}
builtin_funcs = {names, typem ast, map, [functional]}
codegen = {gen_env}
codegen_dsl = {codegen, config, misc}
codegen_trace = {gen_env, codegen_dsl, codegen_builtin_events, config}
compiler = {result, string, error}
config = {string, output}
error = {[stdexcept], source_pos, optional, string}
errors = {[stdexcept], error, token, ops, type}
gen_env = {type_env, [sstream], [functional]}
input = {string, result, [iofwd], [filesystem], [stdexcept]}
lexer = {token, lexer_input, result, error, vector, source_pos}
lexer_input = {string, source_pos}
names = {name}
ops = {string}
options = {string, result, [stdexcept]}
output = {string, result, optional, [iosfwd], [stdexcept]}
parse = {ast, parse_input, parse_result, misc}
parse_input = {token, source_pos, parse_result, vector, errors}
parse_result = {string, result, error}
prim_type = {string, names, hash}
refs = {refs, names, ops, source_pos}
scope = {list, ast, map, type, source}
source = {names, variant}
source_pos = {string, misc, [stdexcept]}
source_pos_private = {string, vector, misc}
token = {variant, optional, string, prim_type}
type = {string, variant, result, vector, optional, names, prim_type, error}
type_env = {ast, type, scope, mapkey}
typechecker = {type_env}


